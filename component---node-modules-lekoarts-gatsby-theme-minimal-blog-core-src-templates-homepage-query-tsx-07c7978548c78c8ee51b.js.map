{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-07c7978548c78c8ee51b.js","mappings":"oQAqBA,EAba,SAAC,GAAD,IAAGA,EAAH,EAAGA,SAAH,OACX,mBACEC,GAAI,CACFC,GAAI,CAAC,EAAG,EAAG,GACXC,GAAI,CAAEC,OAAQ,EAAGC,QAAS,GAC1BC,GAAI,CAAEC,UAAU,OAASL,GAAI,GAC7BM,EAAG,CAAEC,QAAQ,oBAGdT,I,kFCRCU,EAAc,CAClBC,aAF0B,IAKb,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SALS,UAKT,iBAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAE5E,SAAC,KAAD,CAASC,GAAG,KAAKP,QAAQ,YAAYR,GAAI,CACvCgB,QAAS,GACRF,QAAQ,WAFX,kDAKA,mBAAG,mBAAQG,WAAW,KAAnB,6BAAH,0GAA0K,eAAIA,WAAW,KAAf,iCAA1K,0GAKJN,EAAWO,gBAAiB,E,qBCrBtBT,EAAc,CAClBC,aAF0B,IAKb,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SALS,UAKT,iBAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAC5E,mBAAG,cAAGG,WAAW,IACb,KAAQ,2DADT,oCAGH,4GACA,mBAAG,cAAGA,WAAW,IACb,KAAQ,6CADT,sBAGH,6JACA,mBAAG,cAAGA,WAAW,IACb,KAAQ,0CADT,mBAGH,+UAKJN,EAAWO,gBAAiB,ECA5B,IA0BA,EA1BiB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAClB,GAA+BC,EAAAA,EAAAA,KAAvBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SACVC,GAAcC,EAAAA,EAAAA,KAAdD,UAER,OACE,QAAC,IAAD,MACE,cAAIvB,GAAIyB,EAAAA,GAAiBF,IACzB,mBAASvB,GAAI,CAAEC,GAAI,CAAC,EAAG,EAAG,GAAIyB,EAAG,CAAEC,SAAU,CAAC,EAAG,EAAG,GAAIC,GAAI,GAAKpB,QAAQ,kBACvE,QAAC,EAAD,QAGF,QAAC,IAAD,CAAOqB,KAAK,iBACV,QAAC,EAAAC,KAAD,CAAMC,IAAIC,EAAAA,EAAAA,GAAe,IAAIX,EAAL,IAAiBC,IAAzC,oBAEF,QAAC,IAAD,CAASH,MAAOA,EAAOc,UAAU,KAEjC,QAAC,IAAD,CAAOJ,KAAK,aACV,QAAC,KAAD,CAAOK,KAAK,mCAAZ,qBAEF,QAAC,EAAD,CAAMlC,GAAI,CAAEQ,QAAQ,oBAClB,QAAC,EAAD,SClDR,MCQe,YAAuD,IAAjBK,EAAgB,oBAEzDsB,EACNtB,EADFuB,KAAQD,QAGV,OAAO,gBAAC,EAAD,eAAUhB,MAAOgB,EAAQE,OAAWxB,M,iFCc7C,IAjBiB,SAAC,GAAyB,IAAvByB,EAAsB,EAAtBA,KAClB,GAA+BlB,EAAAA,EAAAA,KAAvBmB,EAAR,EAAQA,SAAUlB,EAAlB,EAAkBA,SAElB,OACE,gBAAC,WAAD,KACGiB,EAAKE,KAAI,SAACC,EAAKC,GAAN,OACR,gBAAC,WAAD,CAAgBC,IAAKF,EAAIG,QACpBF,GAAF,KACD,gBAAC,KAAD,CAAO3B,GAAIe,EAAAA,KAAMC,IAAIC,EAAAA,EAAAA,GAAe,IAAIX,EAAL,IAAiBkB,EAAjB,IAA6BE,EAAIG,OACjEH,EAAII,a,iHCiBjB,EAjBqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASb,SAAAA,OAAT,gBACnB,QAAC,KAAD,CAAKhC,GAAI,IACP,QAAC,KAAD,CAAOc,GAAIe,EAAAA,KAAMC,GAAE,WAAae,EAAKF,KAAQ5C,GAAI,CAAE2B,SAAU,CAAC,EAAG,EAAG,GAAIoB,MAAM,SAC3ED,EAAKE,QAER,aAAGhD,GAAI,CAAE+C,MAAM,YAAcnB,GAAI,EAAGrB,EAAG,CAAEwC,MAAM,aAAgBpB,SAAU,CAAC,EAAG,EAAG,MAC9E,oBAAOmB,EAAKG,MACXH,EAAKR,MAAQL,IACZ,QAAC,WAAD,YAEE,QAAC,IAAD,CAAUK,KAAMQ,EAAKR,WCH/B,EARgB,SAAC,GAAD,IAAGnB,EAAH,EAAGA,MAAH,IAAU+B,UAAAA,OAAV,eAA0BjB,SAAAA,OAA1B,gBACd,mBAASjC,GAAI,CAAEC,GAAI,CAAC,EAAG,EAAG,IAAMiD,UAAWA,GACxC/B,EAAMqB,KAAI,SAACM,GAAD,OACT,QAAC,EAAD,CAAcH,IAAKG,EAAKF,KAAME,KAAMA,EAAMb,SAAUA","sources":["webpack://kenjdavidson.gatsby.io/./src/@lekoarts/gatsby-theme-minimal-blog/components/list.tsx","webpack://kenjdavidson.gatsby.io/./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack://kenjdavidson.gatsby.io/./src/@lekoarts/gatsby-theme-minimal-blog/texts/projects.mdx","webpack://kenjdavidson.gatsby.io/./src/@lekoarts/gatsby-theme-minimal-blog/components/homepage.tsx","webpack://kenjdavidson.gatsby.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack://kenjdavidson.gatsby.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack://kenjdavidson.gatsby.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://kenjdavidson.gatsby.io/./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack://kenjdavidson.gatsby.io/./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"sourcesContent":["/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3 },\n      a: { variant: `links.listItem` },\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { Heading, Image } from 'theme-ui';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Heading as=\"h1\" variant=\"styles.h1\" sx={{\n      marginY: 2\n    }} mdxType=\"Heading\">\n  Husbanding, Fathering, Golfing and Developing\n    </Heading>\n    <p><strong parentName=\"p\">{`...my way to retirement!!`}</strong>{`  Since I've obviously got a ways to go, I do my best to keep busy. When I'm not out on the course or `}<em parentName=\"p\">{`playing axeball in other room`}</em>{`  I'm generally reading about some new (to me) languages and frameworks that have piqued my interest.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://kenjdavidson.com/react-native-bluetooth-classic\"\n      }}>{`React Native Bluetooth Classic`}</a></p>\n    <p>{`Provide Bluetooth Classic RFCOMM support to both Android and IOS (External Acessory).`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://kenjdavidson.com/jimbos-nfl-pool/\"\n      }}>{`Jimbos NFL Pools`}</a></p>\n    <p>{`Live weekly scoring for Jimbo's NFL Spread pool.  Currently a work in progress as Jimbo likes to change the source Excel file formats.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://kenjdavidson.com/gspro-courses\"\n      }}>{`GSPro Courses`}</a></p>\n    <p>{`I've learned that regardless of my terrible artistic talent, it's extremely relaxing to build local courses to play on GSPro.  The process is pretty straight forward although a little time consuming based on your level of perfection.  Feel free to check out any of my courses, they aren't the best but they work!`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx, Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\"\nimport Title from \"@lekoarts/gatsby-theme-minimal-blog/src/components/title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config\"\nimport useSiteMetadata from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-site-metadata\"\nimport replaceSlashes from \"@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes\"\nimport { visuallyHidden } from \"@lekoarts/gatsby-theme-minimal-blog/src/styles/utils\"\n// @ts-ignore\nimport Hero from \"../texts/hero\"\n// @ts-ignore\nimport Bottom from \"../texts/bottom\"\nimport Projects from \"../texts/projects\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  [key: string]: any\n}\n\nconst Homepage = ({ posts }: PostsProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 }, variant: `section_hero` }}>\n        <Hero />\n      </section>\n\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n\n      <Title text=\"Projects\">\n        <TLink href=\"https://github.com/kenjdavidson\">Github projects</TLink>\n      </Title>\n      <List sx={{ variant: `section_bottom` }}>\n        <Projects />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage","import { graphql } from \"gatsby\"\nimport HomepageComponent from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Homepage from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n","import * as React from \"react\"\nimport { Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Link as TLink, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <TLink as={Link} to={`/writing${post.slug}`} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n      {post.title}\n    </TLink>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 5, 6] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing"],"names":["children","sx","mb","ul","margin","padding","li","listStyle","a","variant","layoutProps","_frontmatter","MDXContent","components","props","mdxType","as","marginY","parentName","isMDXComponent","posts","useMinimalBlogConfig","basePath","blogPath","siteTitle","useSiteMetadata","visuallyHidden","p","fontSize","mt","text","Link","to","replaceSlashes","showTags","href","allPost","data","nodes","tags","tagsPath","map","tag","i","key","slug","name","post","color","title","date","className"],"sourceRoot":""}