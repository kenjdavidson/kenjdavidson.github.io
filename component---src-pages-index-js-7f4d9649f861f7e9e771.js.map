{"version":3,"sources":["webpack:///./src/components/GridWrapper.js","webpack:///./src/components/ArticleExcerpt.js","webpack:///./src/components/ArticleGrid.js","webpack:///./src/components/PageHeader.js","webpack:///./src/components/Center.js","webpack:///./src/pages/index.js","webpack:///./src/components/Tags.js","webpack:///./src/components/Section.js"],"names":["styled","section","device","min","tablet","laptop","ExcerptTitle","h3","ExcerptHeader","header","ExcerptMain","main","ExcerptFooter","footer","StyledExcerpt","article","className","post","frontmatter","categories","to","fields","slug","featureImage","alt","title","undefined","subcategory","publishTime","summary","excerpt","tags","Tags","posts","GridWrapper","map","ArticleExcerpt","key","node","id","StyledSection","Section","Image","img","Intro","div","desktop","Hero","laptopL","children","meta","useSiteMetadata","src","author","avatar","name","props","padding","data","PageHeader","ArticleGrid","allMdx","edges","Center","query","Tag","li","TagsList","ul","tag","SectionHeader","h1"],"mappings":"8IAGeA,MAAOC,QAAtB,iEAAeD,CAAf,mMAKWE,IAAOC,IAAIC,OAKXF,IAAOC,IAAIE,Q,wBCPhBC,EAAeN,IAAOO,GAAV,mFAAGP,CAAH,qCAKZQ,EAAgBR,IAAOS,OAAV,oFAAGT,CAAH,uKAkBbU,EAAcV,IAAOW,KAAV,kFAAGX,CAAH,+CAKXY,EAAgBZ,IAAOa,OAAV,oFAAGb,CAAH,MAEbc,EAAgBd,IAAOe,QAAV,oFAAGf,CAAH,oEASJ,gBAAGgB,UAAH,IAAcC,EAAd,EAAcA,KAAd,OACb,kBAACH,EAAD,CAAeE,UAAWC,EAAKC,YAAYC,YACzC,kBAAC,IAAD,CAAMC,GAAE,IAAOH,EAAKI,OAAOC,MACzB,kBAACd,EAAD,KACCS,EAAKC,YAAYK,aACd,yBAAKC,IAAKP,EAAKC,YAAYO,aAE3BC,EAEF,0BAAMV,UAAU,gBACZC,EAAKC,YAAYC,YAErB,0BAAMH,UAAU,mBACZC,EAAKC,YAAYS,YAAcV,EAAKC,YAAYS,YAAcV,EAAKI,OAAOO,aAE9E,kBAACtB,EAAD,KAAeW,EAAKC,YAAYO,QAElC,kBAACf,EAAD,KAAcO,EAAKC,YAAYW,QAAUZ,EAAKC,YAAYW,QAAUZ,EAAKa,SACzE,kBAAClB,EAAD,KACIK,EAAKC,YAAYa,KACf,kBAACC,EAAA,EAAD,CAAMD,KAAMd,EAAKC,YAAYa,YAC7BL,MC7DG,oBAAGV,EAAH,EAAGA,UAAWiB,EAAd,EAAcA,MAAd,OACb,kBAACC,EAAD,CAAalB,UAAWA,GACrBiB,EAAME,KAAI,SAAAlB,GAAI,OACb,kBAACmB,EAAD,CAAgBC,IAAKpB,EAAKqB,KAAKC,GAAItB,KAAMA,EAAKqB,a,uHCA9CE,EAAgBxC,YAAOyC,KAAV,+EAAGzC,CAAH,kDAKb0C,EAAQ1C,IAAO2C,IAAV,uEAAG3C,CAAH,wKAaL4C,EAAQ5C,IAAO6C,IAAV,uEAAG7C,CAAH,kfAoBAE,IAAOC,IAAIC,OAcXF,IAAOC,IAAIE,OAIXH,IAAOC,IAAI2C,SAKhBC,EAAO/C,IAAO6C,IAAV,sEAAG7C,CAAH,4MAMCE,IAAOC,IAAIC,OAIXF,IAAOC,IAAI6C,SAOP,gBAAmB,IAAhBC,EAAe,EAAfA,SACVC,EAAOC,cAEb,OACE,kBAACX,EAAD,KACE,kBAACO,EAAD,KACE,kBAACL,EAAD,CAAOU,IAAKF,EAAKG,OAAOC,OAAQ9B,IAAK0B,EAAKG,OAAOE,OACjD,kBAACX,EAAD,KACGK,O,uIC5FIjD,E,UAAAA,EAAO6C,IAAtB,4DAAe7C,CAAf,8CAGa,SAAAwD,GAAK,OAAIA,EAAMC,QAAUD,EAAMC,QAAU,O,sBCLtD,sCAYe,sBAAe,IAAZC,EAAW,EAAXA,KACVR,EAAOC,cAEb,OACE,oCACE,kBAAC,IAAD,KACE,+BAAYD,EAAKzB,MAAjB,MAA4ByB,EAAKrB,UAEnC,kBAAC8B,EAAA,EAAD,KACE,6BACE,mGADF,uGAGK,kBAAC,IAAD,CAAMvC,GAAG,WAAT,2BAHL,QAG2D,kBAAC,IAAD,CAAMA,GAAG,UAAT,sBAH3D,MAMF,kBAACqB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,eACA,kBAACmB,EAAA,EAAD,CAAa3B,MAAQyB,EAAKG,OAAOC,QACjC,kBAACC,EAAD,CAAQN,QAAQ,QACd,kBAAC,IAAD,CAAMrC,GAAG,YAAT,iBAnBK,IA0BF4C,EAAK,c,kCCtClB,qCAGMC,EAAMjE,IAAOkE,GAAV,gEAAGlE,CAAH,oYA0BHmE,EAAWnE,IAAOoE,GAAV,qEAAGpE,CAAH,yCAMC,oBAAEgB,EAAF,EAAEA,UAAWe,EAAb,EAAaA,KAAb,OACb,kBAACoC,EAAD,CAAUnD,UAAWA,GAClBe,EAAKI,KAAI,SAAAkC,GAAG,OACX,kBAACJ,EAAD,CAAK5B,IAAKgC,GAAMA,S,kCCtCtB,mFAKMC,EAAgBtE,IAAOuE,GAAV,yEAAGvE,CAAH,6JAebyC,EAAU,SAAC,GAA6B,IAA3BzB,EAA0B,EAA1BA,UAAWiC,EAAe,EAAfA,SAC5B,OACE,6BAASjC,UAAWA,GAClB,kBAAC,IAAD,KACIiC,KAMgBjD,YAAOyC,GAAV,6EAAGzC,CAAH,sBAIAA,YAAOyC,GAAV,0EAAGzC,CAAH,qBAICA,YAAOyC,GAAV,wEAAGzC,CAAH,qBAWHyC","file":"component---src-pages-index-js-7f4d9649f861f7e9e771.js","sourcesContent":["import styled from 'styled-components';\nimport device from '../utils/breakpoints';\n\nexport default styled.section`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: var(--gutter);\n\n  @media ${device.min.tablet} {\n    grid-template-columns: 1fr 1fr;\n    justify-content: space-between;\n  }\n\n  @media ${device.min.laptop} {\n    grid-template-columns: 1fr 1fr 1fr;    \n    padding: 0;\n  }\n`;","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components'\n\nimport Tags from './Tags';\n\nconst ExcerptTitle = styled.h3`\n  margin: 1rem 0 1rem 0;\n  padding: 0;\n`;\n\nconst ExcerptHeader = styled.header`\n  padding: 0px;  \n\n  .excerpt-type,\n  .excerpt-subtype {\n    text-transform: uppercase;\n    padding-right: 1rem;\n  }\n\n  .excerpt-type {\n    color: var(--base03);\n  }\n\n  .excerpt-subtype {\n    color: var(--base04);\n  }\n`;\n\nconst ExcerptMain = styled.main`\n  margin-bottom: 0.8rem;\n  font-weight: initial;\n`;\n\nconst ExcerptFooter = styled.footer``;\n\nconst StyledExcerpt = styled.article`  \n  padding: 1rem 0;\n\n  a {\n    color: var(--base04);\n    text-decoration: none;\n  }  \n`;\n\nexport default ({ className, post }) => (\n  <StyledExcerpt className={post.frontmatter.categories}>\n    <Link to={ `/${post.fields.slug}`}>      \n      <ExcerptHeader>\n      {post.frontmatter.featureImage ? (\n          <img alt={post.frontmatter.title}></img>\n        ) : (\n          undefined\n        )}    \n        <span className=\"excerpt-type\">\n          { post.frontmatter.categories }\n        </span>\n        <span className=\"excerpt-subtype\">\n          { post.frontmatter.subcategory ? post.frontmatter.subcategory : post.fields.publishTime }\n        </span>    \n        <ExcerptTitle>{post.frontmatter.title}</ExcerptTitle>\n      </ExcerptHeader>\n      <ExcerptMain>{post.frontmatter.summary ? post.frontmatter.summary : post.excerpt}</ExcerptMain>\n      <ExcerptFooter>\n        { post.frontmatter.tags \n          ? <Tags tags={post.frontmatter.tags}></Tags>\n          : undefined }        \n      </ExcerptFooter>\n    </Link>\n  </StyledExcerpt>\n);","import React from 'react';\n\nimport GridWrapper from './GridWrapper';\nimport ArticleExcerpt from './ArticleExcerpt';\n\nexport default ({ className, posts }) => (\n  <GridWrapper className={className}>\n    {posts.map(post => (\n      <ArticleExcerpt key={post.node.id} post={post.node} />\n    ))}      \n  </GridWrapper>   \n);\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Section from './Section';\n\nimport device from '../utils/breakpoints';\nimport useSiteMetadata from '../hooks/useSiteMetadata';\n\nconst StyledSection = styled(Section)`\n  margin: 3em 0;  \n  background-color: var(--base06); \n`;\n\nconst Image = styled.img`  \n  width: 100%;\n  max-width: 250px;\n  height: 250px;\n  z-index: 10;\n\n  background-color: var(--base01);\n  border: var(--gutter) solid var(--base01);\n  border-radius: 50%;  \n\n  margin-bottom: 0px;  \n`;\n\nconst Intro = styled.div`\n  flex: 1;\n  margin-top: -125px;\n  padding: calc(var(--gutter) * 2);\n  padding-top: calc(125px + var(--gutter));\n  text-align: center;\n  color: var(--base07);\n\n  h1, h2, h3, h4 {\n    color: var(--base07);    \n  }\n\n  h2, h3, h4 {\n    display: inline;\n  }\n\n  a {\n    color: var(--base07);    \n  }\n  \n  @media ${device.min.tablet} {\n    margin: 0px;\n    margin-left: -125px;\n    padding: var(--gutter);\n    padding-left: calc(125px + var(--gutter));\n\n    min-height: calc(250px + var(--gutter) * 2);\n\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    text-align: left;\n  }\n\n  @media ${device.min.laptop} {\n    font-size: 120%;\n  }\n\n  @media ${device.min.desktop} {\n    font-size: 100%;\n  }\n`;\n\nconst Hero = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n\n  @media ${device.min.tablet} {\n    flex-direction: row;\n  }\n\n  @media ${device.min.laptopL} {\n    margin-right: calc(var(--gutter) * -1);\n    margin-left: calc(var(--gutter) * -1);\n  }\n`;\n\n\nexport default ({ children }) => {\n  const meta = useSiteMetadata();\n  \n  return (\n    <StyledSection>\n      <Hero>\n        <Image src={meta.author.avatar} alt={meta.author.name}></Image> \n        <Intro>\n          {children}\n        </Intro>\n      </Hero>\n    </StyledSection>\n  ); \n};","import styled from 'styled-components';\n\nexport default styled.div`  \n  flex: 1;  \n\n  padding: ${props => props.padding ? props.padding : '0'};\n  text-align: center;\n`;","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport Helmet from 'react-helmet';\n\nimport PageHeader from '../components/PageHeader';\nimport Section, { SectionHeader } from '../components/Section';\nimport ArticleGrid from '../components/ArticleGrid';\nimport Center from '../components/Center';\n\nimport useSiteMetadata from '../hooks/useSiteMetadata';\nimport '../utils/fragments';\n\nexport default ({ data }) => {\n  const meta = useSiteMetadata();\n\n  return (\n    <>\n      <Helmet>\n        <title>{ `${meta.title} | ${meta.summary}` }</title>\n      </Helmet>\n      <PageHeader>\n        <div>\n          <h1>Husbanding, Fathering, Golfing and Developing my way to retirement.</h1> \n          Besides providing me an online playground for my projects, you'll be able to find information on \n          my <Link to=\"/resume\">professional experience</Link> and <Link to=\"/about\">personal interests</Link>.\n        </div>\n      </PageHeader>\n      <Section>\n        <SectionHeader>Recent</SectionHeader>\n        <ArticleGrid posts={ data.allMdx.edges }></ArticleGrid>                    \n        <Center padding=\"2rem\">\n          <Link to=\"/writing\">Read more</Link>      \n        </Center>        \n      </Section>    \n    </>\n  )\n};\n\nexport const query = graphql`\n  query HomeQuery {\n    allMdx(filter: {fileAbsolutePath: {regex: \"/posts/\"}}, limit: 6, sort: {fields: fields___publishTime, order: DESC}) {\n      edges {\n        node {\n          ...article\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Tag = styled.li`\n  display: inline-block;\n  font-size: 0.8em;    \n  margin: 8px 1em 0 0;  \n  padding: 0.2rem 1.25rem 0.15rem 0.5rem;\n  background-color: var(--base02);\n  color: var(--base04);\n  border-radius: 2px 15px 15px 2px;\n  position: relative;\n  font-weight: initial;\n\n  &:after {\n    content: ' ';\n    position: absolute;\n    background-color: var(--base00);\n    height: 3px;\n    width: 3px;\n    top: 50%; transform: translateY(-50%);\n    right: 0.5em;\n  }\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nconst TagsList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport default ({className, tags}) => (\n  <TagsList className={className}>\n    {tags.map(tag => (\n      <Tag key={tag}>{tag}</Tag>\n    ))}\n  </TagsList>\n);","import React from 'react';\nimport styled from 'styled-components';\n\nimport Container from './Container';\n\nconst SectionHeader = styled.h1`\n  position: relative;\n  padding: 1rem 0;\n\n  &::before {\n    content: ' ';\n    position: absolute;\n    bottom: 0px; \n    left: 0px;\n    height: 0.25rem;\n    width: 3rem;\n    background-color: var(--base08);\n  }\n`;\n\nconst Section = ({ className, children }) => {\n  return (\n    <section className={className}>\n      <Container>\n        { children }    \n      </Container>\n    </section>\n  );\n};\n\nconst ViewHeightSection = styled(Section)`\n  min-width: 100vh;\n`;\n\nconst MinimalSection = styled(Section)`\n  padding: 1rem 0;\n`;\n\nconst LargeSection = styled(Section)`\n  padding: 3rem 0;\n`;\n\nexport {\n  ViewHeightSection,\n  MinimalSection,\n  LargeSection,\n  SectionHeader\n}\n\nexport default Section;\n"],"sourceRoot":""}