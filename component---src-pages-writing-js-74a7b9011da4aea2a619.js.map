{"version":3,"sources":["webpack:///./src/components/PageHeader.js","webpack:///./src/components/ArticleExcerptItem.js","webpack:///./src/components/Tags.js","webpack:///./src/pages/writing.js","webpack:///./src/components/Section.js"],"names":["StyledSection","styled","Section","Image","img","Intro","div","device","min","tablet","laptop","desktop","Hero","laptopL","children","meta","useSiteMetadata","src","author","avatar","alt","name","ExcerptTitle","h3","ExcerptHeader","header","StyledExcerpt","article","ExcerptMain","main","ExcerptFooter","footer","ExcerptDate","span","ExcerptCategory","ReadTime","className","post","to","fields","slug","frontmatter","categories","featureImage","title","undefined","publishTime","style","flex","tags","timeToRead","Tag","li","TagsList","ul","map","tag","key","ArchiveSection","Archive","archive","year","articles","id","data","postsByYear","allMdx","edges","forEach","node","publishYear","push","archives","Object","keys","reverse","query","SectionHeader","h1"],"mappings":"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","file":"component---src-pages-writing-js-74a7b9011da4aea2a619.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport Section from './Section';\n\nimport device from '../utils/breakpoints';\nimport useSiteMetadata from '../hooks/useSiteMetadata';\n\nconst StyledSection = styled(Section)`\n  margin: 3em 0;  \n  background-color: var(--base06); \n`;\n\nconst Image = styled.img`  \n  width: 100%;\n  max-width: 250px;\n  height: 250px;\n  z-index: 10;\n\n  background-color: var(--base01);\n  border: var(--gutter) solid var(--base01);\n  border-radius: 50%;  \n\n  margin-bottom: 0px;  \n`;\n\nconst Intro = styled.div`\n  flex: 1;\n  margin-top: -125px;\n  padding: calc(var(--gutter) * 2);\n  padding-top: calc(125px + var(--gutter));\n  text-align: center;\n  color: var(--base07);\n\n  h1, h2, h3, h4 {\n    color: var(--base07);    \n  }\n\n  h2, h3, h4 {\n    display: inline;\n  }\n\n  a {\n    color: var(--base07);    \n  }\n  \n  @media ${device.min.tablet} {\n    margin: 0px;\n    margin-left: -125px;\n    padding: var(--gutter);\n    padding-left: calc(125px + var(--gutter));\n\n    min-height: calc(250px + var(--gutter) * 2);\n\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    text-align: left;\n  }\n\n  @media ${device.min.laptop} {\n    font-size: 120%;\n  }\n\n  @media ${device.min.desktop} {\n    font-size: 100%;\n  }\n`;\n\nconst Hero = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n\n  @media ${device.min.tablet} {\n    flex-direction: row;\n  }\n\n  @media ${device.min.laptopL} {\n    margin-right: calc(var(--gutter) * -1);\n    margin-left: calc(var(--gutter) * -1);\n  }\n`;\n\n\nexport default ({ children }) => {\n  const meta = useSiteMetadata();\n  \n  return (\n    <StyledSection>\n      <Hero>\n        <Image src={meta.author.avatar} alt={meta.author.name}></Image> \n        <Intro>\n          {children}\n        </Intro>\n      </Hero>\n    </StyledSection>\n  ); \n};","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components'\n\nimport Tags from './Tags';\n\nimport device from '../utils/breakpoints';\n\nconst ExcerptTitle = styled.h3`\n  margin: 0.25em 0 0.5em 0;\n\n  @media ${device.min.tablet} {\n    margin: initial;\n  }\n`;\n\nconst ExcerptHeader = styled.header`\n  padding: 0px; \n  flex-shrink: 0;\n  display: flex;\n\n  @media ${device.min.tablet} {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nconst StyledExcerpt = styled.article`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: stretch;\n  margin-bottom: 2em;\n\n  @media ${device.min.tablet} {\n    flex-direction: row;\n    align-items: flex-start;\n  }\n`;\n\nconst ExcerptMain = styled.main`\n  flex: 1;\n`;\n\nconst ExcerptFooter = styled.footer`\n  margin-top: 0.5em;\n\n  @media ${device.min.tablet} {\n    margin-top: 0;\n  }\n`;\n\nconst ExcerptDate = styled.span`\n  text-transform: uppercase;\n  padding-right: 1rem;\n  color: var(--base04);\n  order: 2;\n  font-weight: initial;\n\n  @media ${device.min.tablet} {\n    order: 1;\n  }\n`;\n\nconst ExcerptCategory = styled.span`\n  text-transform: uppercase;\n  padding-right: 1rem;\n  color: var(--base03);\n  order 1;\n  font-weight: initial;\n\n  @media ${device.min.tablet} {\n    order: 2;\n  }\n`;\n\nconst ReadTime = styled.span`\n  font-weight: initial;\n`;\n\nexport default ({ className, post }) => (\n  <Link to={ `/${post.fields.slug}`}>      \n    <StyledExcerpt className={post.frontmatter.categories}>        \n      <ExcerptHeader>\n      {post.frontmatter.featureImage ? (\n          <img alt={post.frontmatter.title}></img>\n        ) : (\n          undefined\n        )}    \n        <ExcerptDate>\n          { post.fields.publishTime }\n        </ExcerptDate>\n        <ExcerptCategory>\n          { post.frontmatter.categories }\n        </ExcerptCategory>\n      </ExcerptHeader>   \n      <ExcerptMain style={{flex:1}}>\n        <ExcerptTitle>{post.frontmatter.title}</ExcerptTitle>\n        { post.frontmatter.tags \n          ? <Tags tags={post.frontmatter.tags}></Tags>\n          : undefined } \n      </ExcerptMain>          \n      <ExcerptFooter>\n        <ReadTime>\n          { post.timeToRead } min read\n        </ReadTime>\n      </ExcerptFooter>     \n    </StyledExcerpt>\n  </Link>\n);\n\nexport {\n  StyledExcerpt,\n  ExcerptHeader,\n  ExcerptMain,\n  ExcerptFooter,\n  ExcerptTitle,\n  ExcerptDate,\n  ExcerptCategory,\n};","import React from 'react';\nimport styled from 'styled-components';\n\nconst Tag = styled.li`\n  display: inline-block;\n  font-size: 0.8em;    \n  margin: 8px 1em 0 0;  \n  padding: 0.2rem 1.25rem 0.15rem 0.5rem;\n  background-color: var(--base02);\n  color: var(--base04);\n  border-radius: 2px 15px 15px 2px;\n  position: relative;\n  font-weight: initial;\n\n  &:after {\n    content: ' ';\n    position: absolute;\n    background-color: var(--base00);\n    height: 3px;\n    width: 3px;\n    top: 50%; transform: translateY(-50%);\n    right: 0.5em;\n  }\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nconst TagsList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport default ({className, tags}) => (\n  <TagsList className={className}>\n    {tags.map(tag => (\n      <Tag key={tag}>{tag}</Tag>\n    ))}\n  </TagsList>\n);","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\n\nimport PageHeader from '../components/PageHeader';\nimport Flex from '../components/Flex';\nimport Section, { SectionHeader } from '../components/Section';\nimport ArticleExcerptItem from \"../components/ArticleExcerptItem\";\n\nimport useSiteMetadata from '../hooks/useSiteMetadata';\n\nconst ArchiveSection = styled(Section)`\n  margin-bottom: 0;\n`;\n\nconst Archive = ({ archive }) => (  \n  <ArchiveSection>\n    <Flex>    \n      <header>\n        <SectionHeader>{archive.year}</SectionHeader>\n      </header>  \n      <main>\n        { archive.articles.map((article) => (          \n          <ArticleExcerptItem key={article.id} post={article}></ArticleExcerptItem>\n        ))}\n      </main>\n    </Flex>\n  </ArchiveSection>\n);\n\nexport default ({ data }) => {\n  const meta = useSiteMetadata();\n\n  let postsByYear = {};\n\n  data.allMdx.edges.forEach((node) => {\n    let post = node.node;\n\n    if (!postsByYear[post.fields.publishYear]) {\n      postsByYear[post.fields.publishYear] = [];\n    }\n    postsByYear[post.fields.publishYear].push(post);\n  });\n\n  let archives = Object.keys(postsByYear).reverse().map((year) => {\n    return {\n      year: year,\n      articles: postsByYear[year]\n    };\n  });\n\n  return (\n    <>      \n      <Helmet>\n        <title>{ `${meta.title} | Writing` }</title>\n      </Helmet>\n      <PageHeader>\n        <div>\n          <h3>I'm neither published nor awarded</h3> but I am opinionated and spend a bunch of time playing around with new languages and\n          frameworks - it's possible something I write might help someone skip the suffering that I've run into.  There's always a chance\n          a post on my personal husbanding or fathering methods may appear!\n        </div>\n      </PageHeader>    \n      { archives.map((archive) => (      \n      <Archive key={archive.year} archive={archive}></Archive>\n      )) }\n    </>\n  );\n};\n\nexport const query = graphql`\n  query WritingQuery {\n    allMdx(filter: {fileAbsolutePath: {regex: \"/posts/\"}}, sort: {fields: fields___publishTime, order: DESC}) {\n      edges {\n        node {\n          ...article\n        }\n      }\n    }\n  }\n`;","import React from 'react';\nimport styled from 'styled-components';\n\nimport Container from './Container';\n\nconst SectionHeader = styled.h1`\n  position: relative;\n  padding: 1rem 0;\n\n  &::before {\n    content: ' ';\n    position: absolute;\n    bottom: 0px; \n    left: 0px;\n    height: 0.25rem;\n    width: 3rem;\n    background-color: var(--base08);\n  }\n`;\n\nconst Section = ({ className, children }) => {\n  return (\n    <section className={className}>\n      <Container>\n        { children }    \n      </Container>\n    </section>\n  );\n};\n\nconst ViewHeightSection = styled(Section)`\n  min-width: 100vh;\n`;\n\nconst MinimalSection = styled(Section)`\n  padding: 1rem 0;\n`;\n\nconst LargeSection = styled(Section)`\n  padding: 3rem 0;\n`;\n\nexport {\n  ViewHeightSection,\n  MinimalSection,\n  LargeSection,\n  SectionHeader\n}\n\nexport default Section;\n"],"sourceRoot":""}